name: Terraform CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev or prod)"
        required: true
        default: "dev"
      version:
        description: "Version to deploy"
        required: true

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq unzip

      - name: Download dev artifact
        if: ${{ github.event.inputs.environment == 'dev' }}
        uses: actions/download-artifact@v4
        with:
          name: terraform-dev-${{ github.event.inputs.version }}
          path: ./artifact

      - name: Download prod artifact via GitHub Release
        if: ${{ github.event.inputs.environment == 'prod' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          TAG: ${{ github.event.inputs.version }}
        run: |
          FILE="terraform-release-$TAG.zip"

          echo "Downloading $FILE from release $TAG"

          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/$TAG | jq -r .id)

          if [ "$RELEASE_ID" = "null" ]; then
            echo "Release with tag $TAG not found."
            exit 1
          fi

          ASSET_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/$RELEASE_ID/assets | jq -r --arg FILE "$FILE" '.[] | select(.name==$FILE) | .id')

          if [ -z "$ASSET_ID" ]; then
            echo "Asset $FILE not found in release $TAG."
            exit 1
          fi

          curl -L -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/octet-stream" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/assets/$ASSET_ID \
            -o $FILE

          echo "Downloaded $FILE successfully."
          mkdir -p ./artifact
          mv $FILE ./artifact/

      - name: Extract Artifact
        run: unzip -o ./artifact/*.zip -d ./release

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform -chdir=release init

      - name: Terraform Plan
        run: terraform -chdir=release plan -var="environment=${{ github.event.inputs.environment }}"

      - name: Terraform Apply
        run: terraform -chdir=release apply -auto-approve -var="environment=${{ github.event.inputs.environment }}"
