name: Terraform CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev or prod)"
        required: true
        default: "dev"
      version:
        description: "Version to deploy"
        required: true

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download Dev Artifact from Release (if dev)
        if: ${{ github.event.inputs.environment == 'dev' }}
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: ${{ github.event.inputs.version }}
          file: terraform-dev-${{ github.event.inputs.version }}.zip
          token: ${{ secrets.PAT_TOKEN }}

      - name: Download Release Artifact
        if: ${{ github.event.inputs.environment == 'prod' }}
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: ${{ github.event.inputs.version }}
          file: terraform-release-${{ github.event.inputs.version }}.zip
          token: ${{ secrets.PAT_TOKEN }}

      - name: Extract Artifact
        run: unzip -o *.zip -d ./release

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform -chdir=release init

      - name: Terraform Plan
        run: terraform -chdir=release plan -var="environment=${{ github.event.inputs.environment }}"

      - name: Terraform Apply
        run: terraform -chdir=release apply -auto-approve -var="environment=${{ github.event.inputs.environment }}"
